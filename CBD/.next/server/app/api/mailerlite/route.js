(()=>{var e={};e.id=774,e.ids=[774],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},24467:()=>{},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61419:()=>{},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},67791:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>m,routeModule:()=>y,serverHooks:()=>b,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{POST:()=>g});var o=t(43007),a=t(44360),i=t(98343),n=t(28142);let c=process.env.MAILERLITE_API_TOKEN,u="https://connect.mailerlite.com/api";async function l(e){try{console.log("Adding subscriber to MailerLite:",e);let r=await fetch(`${u}/subscribers`,{method:"POST",headers:{Authorization:`Bearer ${c}`,"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(e)}),t=await r.json();if(console.log("MailerLite API Response:",{status:r.status,statusText:r.statusText,data:t}),!r.ok)throw Error(`Failed to add subscriber: ${JSON.stringify(t)}`);return t}catch(e){throw console.error("Error adding subscriber:",e),e}}async function d(e,r){try{console.log("Updating subscriber in MailerLite:",{email:e,fields:r});let t=await fetch(`${u}/subscribers/${e}`,{method:"PUT",headers:{Authorization:`Bearer ${c}`,"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({fields:r})}),s=await t.json();if(console.log("MailerLite API Response:",{status:t.status,statusText:t.statusText,data:s}),!t.ok)throw Error(`Failed to update subscriber: ${JSON.stringify(s)}`);return s}catch(e){throw console.error("Error updating subscriber:",e),e}}async function p(e){try{console.log("Sending tracking email to:",e.email);let r=await fetch(`${u}/campaigns`,{method:"POST",headers:{Authorization:`Bearer ${c}`,"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({name:`Order Tracking - ${e.fields?.order_id}`,type:"regular",subject:"Your Order is on its way! \uD83D\uDE9A",content:{html:`
            <h1>Thank you for your order!</h1>
            <p>Dear ${e.fields?.name||"Valued Customer"},</p>
            <p>Your order has been shipped and is on its way to you.</p>
            <p>Tracking Number: ${e.fields?.tracking_number}</p>
            <p>Track your package: <a href="${e.fields?.tracking_url}">Click here to track your order</a></p>
            <p>Order ID: ${e.fields?.order_id}</p>
            <p>Thank you for choosing Dose Daily!</p>
          `,plain:`
            Thank you for your order!
            
            Dear ${e.fields?.name||"Valued Customer"},
            
            Your order has been shipped and is on its way to you.
            
            Tracking Number: ${e.fields?.tracking_number}
            Track your package: ${e.fields?.tracking_url}
            Order ID: ${e.fields?.order_id}
            
            Thank you for choosing Dose Daily!
          `},recipients:{segments:[],groups:[],subscribers:[e.email]}})}),t=await r.json();if(console.log("MailerLite Campaign Response:",{status:r.status,statusText:r.statusText,data:t}),!r.ok)throw Error(`Failed to send tracking email: ${JSON.stringify(t)}`);return t}catch(e){throw console.error("Error sending tracking email:",e),e}}async function g(e){try{if(!c)throw console.error("MAILERLITE_API_TOKEN is not configured"),Error("MAILERLITE_API_TOKEN is not configured");let r=await e.json();console.log("Received request body:",r);let{email:t,name:s,tracking_number:o,tracking_url:a,order_id:i}=r;if(!t)return n.NextResponse.json({error:"Email is required"},{status:400});try{let e=await l({email:t,fields:{name:s,tracking_number:o,tracking_url:a,order_id:i}});return console.log("Successfully added subscriber:",e),o&&a&&await p({email:t,fields:{name:s,tracking_number:o,tracking_url:a,order_id:i}}),n.NextResponse.json({success:!0,message:"Subscriber added successfully",data:e})}catch(e){if(e.message.includes("already exists")){console.log("Subscriber exists, updating information...");let e=await d(t,{tracking_number:o,tracking_url:a,order_id:i});return console.log("Successfully updated subscriber:",e),o&&a&&await p({email:t,fields:{name:s,tracking_number:o,tracking_url:a,order_id:i}}),n.NextResponse.json({success:!0,message:"Subscriber updated successfully",data:e})}throw e}}catch(e){return console.error("MailerLite API Error:",e),n.NextResponse.json({error:"Failed to process subscriber",details:e.message},{status:500})}}let y=new o.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/mailerlite/route",pathname:"/api/mailerlite",filename:"route",bundlePath:"app/api/mailerlite/route"},resolvedPagePath:"/Users/sebastianlourenco/Desktop/CBD/CBD/app/api/mailerlite/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:f,workUnitAsyncStorage:h,serverHooks:b}=y;function m(){return(0,i.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:h})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[535,38],()=>t(67791));module.exports=s})();
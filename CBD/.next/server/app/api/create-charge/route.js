(()=>{var e={};e.id=119,e.ids=[119],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},15275:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>h,routeModule:()=>u,serverHooks:()=>l,workAsyncStorage:()=>p,workUnitAsyncStorage:()=>d});var s={};t.r(s),t.d(s,{POST:()=>c});var o=t(43007),n=t(44360),a=t(98343),i=t(28142);async function c(e){try{let r=await e.json();if(console.log("Received request body:",r),!r.name||!r.local_price?.amount||!r.local_price?.currency)return console.error("Missing required fields:",r),i.NextResponse.json({error:"Missing required fields"},{status:400});let t=parseFloat(r.local_price.amount);if(isNaN(t)||t<=0)return console.error("Invalid price:",r.local_price.amount),i.NextResponse.json({error:"Invalid price"},{status:400});let s=process.env.COINBASE_COMMERCE_API_KEY;if(console.log("Environment check:",{hasApiKey:!!s,apiKeyLength:s?.length,nodeEnv:"production"}),!s)return console.error("No Coinbase Commerce API key configured"),i.NextResponse.json({error:"Payment service is not configured"},{status:500});let o=await fetch("https://api.commerce.coinbase.com/charges",{method:"POST",headers:{"Content-Type":"application/json","X-CC-Api-Key":s,"X-CC-Version":"2018-03-22"},body:JSON.stringify(r)}),n=await o.json();if(console.log("Coinbase Commerce API response:",n),!o.ok)return console.error("Coinbase Commerce API error:",n),i.NextResponse.json({error:n.error?.message||"Failed to create charge"},{status:o.status});if(n.data?.hosted_url)return i.NextResponse.json({hosted_url:n.data.hosted_url});if(n.hosted_url)return i.NextResponse.json({hosted_url:n.hosted_url});if(n.data?.web3_retail_payment_metadata){let e=n.data.hosted_url||n.hosted_url;if(e)return i.NextResponse.json({hosted_url:e})}return console.error("No hosted URL in response:",n),i.NextResponse.json({error:"Invalid response from payment provider"},{status:500})}catch(e){return console.error("Error creating charge:",e),i.NextResponse.json({error:"Failed to create charge"},{status:500})}}let u=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/create-charge/route",pathname:"/api/create-charge",filename:"route",bundlePath:"app/api/create-charge/route"},resolvedPagePath:"/Users/sebastianlourenco/Desktop/CBD/CBD/app/api/create-charge/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:p,workUnitAsyncStorage:d,serverHooks:l}=u;function h(){return(0,a.patchFetch)({workAsyncStorage:p,workUnitAsyncStorage:d})}},24467:()=>{},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61419:()=>{},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[535,38],()=>t(15275));module.exports=s})();